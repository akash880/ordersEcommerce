{"version":3,"sources":["../src/index.js"],"names":["connection","mysql","createConnection","host","user","password","database","connect","err","console","log","app","server","http","createServer","use","req","res","next","db","exposedHeaders","config","corsHeaders","bodyParser","json","limit","bodyLimit","listen","process","env","PORT","port","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,aAAaC,gBAAMC,gBAAN,CAAuB;AACxCC,QAAM,WADkC;AAExCC,QAAM,MAFkC;AAGxCC,YAAU,UAH8B;AAIxCC,YAAU;AAJ8B,CAAvB,CAAnB;;AAOAN,WAAWO,OAAX,CAAmB,UAACC,GAAD,EAAS;AAC1B,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,UAAQC,GAAR,CAAY,YAAZ;AACD,CAHD;;AAMA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;AACAA,IAAII,GAAJ,CAAQ,UAASC,GAAT,EAAaC,GAAb,EAAiBC,IAAjB,EAAsB;AAC1BF,MAAIG,EAAJ,GAASnB,UAAT,CAD0B,CACL;AACrBkB;AACH,CAHD;AAIA;AACAP,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,oBAAK;AACZK,kBAAgBC,iBAAOC;AADX,CAAL,CAAR;;AAIAX,IAAII,GAAJ,CAAQQ,qBAAWC,IAAX,CAAgB;AACvBC,SAAQJ,iBAAOK;AADQ,CAAhB,CAAR;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACAf,IAAII,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAAEM,wBAAF,EAAUrB,sBAAV,EAAJ,CAAhB;AACAW,IAAIC,MAAJ,CAAWe,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBT,iBAAOU,IAA7C,EAAmD,YAAM;AACtDtB,UAAQC,GAAR,sBAA+BC,IAAIC,MAAJ,CAAWoB,OAAX,GAAqBD,IAApD;AACA,CAFH;kBAGepB,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\nimport mysql from 'mysql';\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '12345678',\n  database: ''\n});\n\nconnection.connect((err) => {\n  if (err) throw err;\n  console.log('Connected!');\n});\n\n\nlet app = express();\napp.server = http.createServer(app);\napp.use(function(req,res,next){\n    req.db = connection; //this db comes from app.js context where you define it\n    next();\n});\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit\n}));\n\n// connect to db\n// initializeDb( db => {\n// \tconsole.log(db);\n// \t// internal middleware\n// \tapp.use(middleware({ config, db }));\n\n// \t// api router\n// \t\n\n// \tapp.server.listen(process.env.PORT || config.port, () => {\n// \t\tconsole.log(`Started on port ${app.server.address().port}`);\n// \t});\n// });\napp.use('/api', api({ config, connection }));\napp.server.listen(process.env.PORT || config.port, () => {\n\t\t\tconsole.log(`Started on port ${app.server.address().port}`);\n\t\t});\nexport default app;\n"]}